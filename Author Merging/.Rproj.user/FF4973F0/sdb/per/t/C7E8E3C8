{
    "contents" : "merge<-function(pid,author,lemail)\n{\n  emailindex<-NULL\n  if(length(lemail)>0)\n  {\n    for(i in 1:length(lemail))\n    {\n      temp<-lemail[[i]][1]\n      emailindex<-c(emailindex,temp)\n    }\n  }\n  email<-NULL\n # print(pid)\n  test<-(match(pid,emailindex,nomatch=-1))\n  if(test!=-1) # for the case where both names and email address are found. Merging between author names and email id has to be done\n  {\n    email<-lemail[[test]]\n    email<-email[email!=email[1]]\n   # print(author)\n    nematch(pid,author,email)\n  }\n else # case in which only names are there.  No email id so it will be assigned NULL in the database\n  {\n   # print(pid)\n  #  print(author)\n    mail<-c(\"NULL\")\n    role<-c(\"author\")\n    for(n in author)\n    {\n      dbwrite(pid,n,mail,role)\n  }\n    \n  }\n  \n}\nnematch<-function(pid,author,email)\n{\n# print(email) \n  author<-tolower(author)\n  templst<-NULL\n  #print(author)\n #print(email)\n  t1author<-author\n  for(aut in t1author)\n  {\n    #print(\"here\")\n    posid<-NULL\n    nameparts<-(unlist(strsplit(aut,\" \")))\n    # genrating possible email ids with full names\n    posid<-gpe(nameparts)\n    #print(nameparts)\n   # print(posid)\n    #p.rastogi and r.prateek type id\n   for(name in nameparts)\n   {\n     timepass<-nameparts[nameparts!=name]\n    timepass<-c(timepass,unlist(strsplit(name,\"\"))[1])\n     temp<-gpe(timepass)\n     posid<-c(posid,temp)\n   }\n    #print(posid)\n    #print(aut)\n   templst<-nmperfect(email,posid,aut,t1author,pid) # in case of perfect matching\n   # print(email)\n    if(length(setdiff(email,setdiff(email,(templst[[1]]))))>0)\n    {\n      email<-setdiff(email,setdiff(email,(templst[[1]])))\n    }\n   # print(author)\n    if(length(setdiff(author,setdiff(author,(templst[[2]]))))>0)\n    {\n      author<-setdiff(author,setdiff(author,(templst[[2]])))\n    }\n    #print(author)\n  }\n# print(\"maadar chod\")\n # print(author)\n# print(\"bkl\") \n  tauthor<-author\n  #print(tauthor)\n  #print(email)\n  for(aut in tauthor)\n{\n    templst2<-NULL\n    # no email ids left to match\n    if(length(email)==0)\n    {\n        mail<-c(\"NULL\")\n        role<-c(\"NULL\")\n        dbwrite(pid,aut,mail,role)\n        #print(\"here\")\n    }\n    else\n    {\n     # print(\"here\")\n      #print(tauthor)\n      templst2<-nmapprox(email,aut,tauthor,pid)\n      #print(templst2)\n    }\n   # print(setdiff(email,(templst2[[1]])))\n    if(length(templst2[[1]])>0)\n    {\n      #print(email)\n      email<-setdiff(email,(templst2[[1]]))\n     # print(\"fuck off\")\n     # print(email)\n    }\n    # print(author)\n    if(length(templst2[[2]])>0)\n    {\n     # print(author)\n      author<-setdiff(author,templst2[[2]])\n      #print(\"fuck off\")\n      #print(author)\n    }\n  #print(email)\n    #print(author)\n   # print(\"loop\")\n}\n  #print(\"behen chod\")\n # print(email)\n#print(author)\n  # assign all the remaining authors and mail as separate identity\n    if(length(author)>0)\n    {\n      for(t in author)\n      {\n        dmail<-c(\"NULL\")\n        role<-c(\"author\")\n        dauth<-t\n       # print(\"here\")\n       # print(pid)\n        dbwrite(pid,dauth,dmail,role)\n      }\n    }\n  if(length(email)>0)\n  {\n    for(t in email)\n    {\n      dauth<-c(\"NULL\")\n      role<-c(\"author\")\n      dmail<-t\n     # print(\"yaha maa chuda raha hu\")\n     # print(pid)\n      dbwrite(pid,dauth,dmail,role)\n    }\n  }\n\n}\n# generate possible email ids\ngpe<-function(author)\n{\n  list<-permn(author)\n  posid<-NULL\n  if(length(list)>0)\n  {\n    for(t in (1:length(list)))\n      {\n      posid<-c(posid,paste(list[[t]],collapse=\".\"))\n      posid<-c(posid,paste(list[[t]],collapse=\" \"))\n      posid<-c(posid,paste(list[[t]],collapse=\"+\"))\n      posid<-c(posid,paste(list[[t]],collapse=\"-\"))\n      posid<-c(posid,paste(list[[t]],collapse=\"_\"))\n    }\n  }\n  return(posid)\n}\nnmperfect<-function(email,posid,aut,author,pid)\n{\n # print(posid)\n # print(email)\n  #print(aut)\n  #print(\"in nmperfect\")\n normail<-NULL  # all email ids of the author field in normal form\n# print(email)\n  for(t in email)\n  {\n    #print(\"fuck here\")\n   # print(t)\n  normail<-c(normail,unlist(strsplit(t,\"@\"))[1])\n  }\n#print(normail)\n #print(posid)\n \n if(length(normail)>0)\n  {#print(posid)\n   #print(normail[i])\n   for(i in (1:length(normail)))\n  {\n    #print(normail[i])\n    #print(email[i])\n # print(tposid)\n   # tposid<-NULL\n    #print(posid)\n       test<-(setdiff(normail[i],setdiff(normail[i],posid)))\n   # print(posid)\n       \n # print(normail[i])\n    \n    if(length(test)>0)\n    {\n     #print(normail[i])\n      role<-c(\"author\")\n     dbwrite(pid,aut,email[i],role)\n      #print(email[i])\n      #print(email)\n      email<-email[email!=email[i]]\n      #print(author)\n      author<-author[author!=aut]\n      #print(author)\n      #print(email)\n      return(list(email,author))\n      break\n    }\n  }\n}\n}\nnmapprox<-function(email,aut,author,pid)\n{\n # print(\"in nmapprox\")\n  temail<-email\n  #print(temail)\n  for(t in temail)\n  {\n    #print(t)\n    role<-c(\"author\")\n    temp<-unlist(strsplit(t,\"@\"))[1]\n   temp2<-unlist(strsplit(temp,\"<|!|>|[|]|$|%|&|(|\\\\^|\\\\+|\\\\-|)|,|\\\\.| \"))\n    temp2<-gsub(\"<|!|>|[|]|$|%|&|(|\\\\^|\\\\+|\\\\-|)|,|\\\\.| \",\"\",temp2)\n    lst<-permn(temp2)\n    #print(temp2)\n    if(length(lst)>0)\n    {\n      #print(lst)\n      for(p in lst)\n      {\n        #print(p)\n       comparator<-(paste(p,collapse=\" \"))\n      # print(comparator)\n       sim<-levenshteinSim(aut,comparator)\n     #print(sim)\n      # print(t)\n      # print(email)\n    # print(aut)\n       if(sim>0.7)   ####### threshold if crossed\n       {\n         remail<-email\n         rauthor<-aut\n         dbwrite(pid,aut,t,role)\n         \n         #print(aut)\n        # print(t)\n         #print(remail)\n        # print(rauthor)\n         return(list(remail,rauthor))\n         break\n       }\n      }\n    }\n  }\n}",
    "created" : 1373558626691.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "1|1|34|0|\n36|1|148|0|\n151|1|166|0|\n168|1|216|0|\n223|3|259|2|\n",
    "hash" : "4099772979",
    "id" : "C7E8E3C8",
    "lastKnownWriteTime" : 1373901297,
    "path" : "E:/R/Author Merging/R/Merge.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : true,
    "type" : "r_source"
}