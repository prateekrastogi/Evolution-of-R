{
    "contents" : "# To obtain the path of the source directory.\nsrcloc<-function(){\n  if(length(scan(\".//data//srcdir.txt\",what=\"\"))==0){\n    path <- readline(\"Please enter the R source directory filepath: \")\n    fileConn<-file(\".//data//srcdir.txt\")\n    writeLines(path, fileConn)\n    close(fileConn)\n  }\n  else {\n    x<-readline(\"Do you want to use the stored path?(y/n) \")\n    if(x=='y')\n    {path<-readLines(\".//data//srcdir.txt\")}\n    else{\n      path <- readline(\"Please enter the R source directory filepath: \")\n      fileConn<-file(\".//data//srcdir.txt\")\n      writeLines(path, fileConn)\n      close(fileConn) \n    }\n  }\n  repeat\n  {\n    path<- toString.default(readLines(\".//data//srcdir.txt\"))\n    temp <-file.info(path)$isdir\n    temp <- temp[!is.na(temp)]\n    if((length(temp)==0) || (temp ==F)){\n      path <-readline(\"You have entered the wrong directory path. Please enter the correct path: \")\n    fileConn<-file(\".//data//srcdir.txt\")\n    writeLines(path, fileConn)\n    close(fileConn)}\n  else{break   \n  }\n    }\n}\n# sorts out tar, tgz, zip files from the directory\ntarloc <- function(){\n  path<- readLines(\".//data//srcdir.txt\")\n   arlst<- dir(path, pattern=\"zip|tar|tgz\" , recursive =T)\n  nlst<-grep(\"base\\\\/\",arlst)\n  tlst<-grep(\"base-prerelease\",arlst)\n  exception<-grep(\"locfit_1.00.tar|vines_1.|VLMC_1.3|zipfR_ |zipcode_1.0|TSEN_1.0|spectralGP_|lme_3.1|oblique.tree_|pcalg_1.1-6|odprism_1.1|localdepth_|hyperSpec_0.98-20120923|HH_2.3-37|HGLMMM_0.1.2|fit4NM_3.3.3|FitAR_1.94|dr_3.0.7|cobs_1.2-2|cec2005benchmark_1.0.3|cem_1.1.5|VLMC_|RDF_1.1|XML_3.95|tsDyn_|sp_|tree_|spectralGP_|rjags_1.0.3-6|sn_|samr_|sampling_|Rmpi_|RImageJ_|lme4_0.999375|R2HTML_2|R.oo_|R2HTML_1.5|pls_|plotAndPlayGTK_|pcalg_1.1-2|pcalg_1.1-4|pcalg_1.1-5|pbatR_1.0|pbdDMAT_0.2-0|oblique.tree_1.0|mi_|np_|lme4_0.999999|ibr_||kml_1.|kml_2.|kml3d_|flip_1.0|hyperSpec_0.98|HGLMMM_|ars_|bmd_|energy_1.4-0|EuclideanMaps_1.0|cobs_1.2-1|CoCoGraph_0.1.7.6|CoCoCg_0.1.7.6|CoCo_|cobs_1.2-0|cobs_1.1-5|cobs_1.1-6|BiplotGUI_0.0-4.1|bit_|BiplotGUI_0.0-6|BiplotGUI_0.0-5|BiDimRegression_1.0-3|bigmemory_4.2.1|bigmemory_4.4.0|bigmemory_4.3.0|bigmemory_4.2.3|bicreduc_0.4-7|ber_1.0|bibtex_|bethel_0.1|Bchron_1.2|AtelieR_0.22|Barnard_|bayesm_0.0-1|BADER_|BACprior_1.2|awsMethods_1.0-0|arrayMissPattern_1.3|AID_|aroma|arrayImpute_1.3|AdequacyModel_1.0|ape_|agilp_|adehabitat_|tripack|abind|ade4_|allelic_0.1|anaglyph_0.1-1|ALDqr_0.0|clines|RSvgDevice|alabama_2011.9-1|AdequacyModel_1.0.1|AID_1.2|boot|cluster|rcom|sp_0.9-1|lambda.r_1.1.1-3|Ace_\",arlst)\n  templst<-arlst[nlst]\n  temp2lst <-arlst[tlst]\n  temp3lst<-arlst[exception]\n   arlst<-setdiff(arlst,templst)\n  arlst <-setdiff(arlst,temp2lst)\n  arlst<-setdiff(arlst,temp3lst)\n  ofileconn<-file(\".//data//pkgpaths.txt\")        #preserving the path of the package\n  writeLines(arlst,ofileconn)            \n  close(ofileconn)\n  wlst<-readLines(\".//data//wpkg.txt\")\n  wlst<-wlst[wlst!=\"\"]\n  wlen<-length(wlst)\n  if(wlen==0) \n    {pendwrk(arlst) \n     \n     }\n  else \n    {pkganalysis()}  #crash recovery \n\n}\n# finds new updates in the source library\npendwrk <- function(lst){\n  ofileconn<-file(\".//data//opkg.txt\")\n  olst <-readLines(ofileconn)\n  close(ofileconn)\n  olst<-olst[olst!=\"\"]\n  wlst<-setdiff(lst,olst)\n  if(length(wlst)==0)\n  {\n    print(\"All items are scanned no more source remains.\")\n  }\n  #if some new remains to be processed. \n  else{ wfileconn <- file(\".//data//wpkg.txt\")\n        writeLines(wlst,wfileconn)\n        close(wfileconn)\n        pkganalysis()\n  }\n \n}\n",
    "created" : 1369910906352.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2290703518",
    "id" : "A7CCAA10",
    "lastKnownWriteTime" : 1375446240,
    "path" : "E:/R/Pkg_mdt_extractor/R/DirHelper.R",
    "properties" : {
    },
    "source_on_save" : true,
    "type" : "r_source"
}